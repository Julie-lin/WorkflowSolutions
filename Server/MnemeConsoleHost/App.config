<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>
  <system.diagnostics>
    <sources>
      <source propagateActivity="true" name="System.ServiceModel" switchValue="Warning, ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="NewListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Warning, ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="NewListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="C:\ThermoFisher\Mneme\Server\MnemeConsoleHost\app_tracelog.svclog"
        type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="NewListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>
    </sharedListeners>
  </system.diagnostics>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="IProcess"  type="Workflow.Data.Interfaces.IProcess, Workflow.Data"/>
    <alias alias="IProcessBatch"  type="Workflow.Data.Interfaces.IProcessBatch, Workflow.Data"/>
    <alias alias="IExcuteComponent"  type="Workflow.Data.Interfaces.IExcuteComponent, Workflow.Data"/>
    <alias alias="IExecuteBatchComponent"  type="Workflow.Data.Interfaces.IExecuteBatchComponent, Workflow.Data"/>
    <alias alias="IExecuteGroupComponent"  type="Workflow.Data.Interfaces.IExecuteGroupComponent, Workflow.Data"/>
    <alias alias="IExecuteStartupComponent"  type="Workflow.Data.Interfaces.IExecuteStartupComponent, Workflow.Data"/>
    <alias alias="IInitializeBatch"  type="Workflow.Data.Interfaces.IInitializeBatch, Workflow.Data"/>

    <container name="ProcessJobLocator" >
      <!--<register type="IProcessBatch" name="ClientBatch" mapTo="Client.Data.ClientBatch, Client.Data"/>-->
      <register type="IExecuteStartupComponent" name="ClientStartupComponent" mapTo="Mneme.Processes.ClientStartupComponent, Mneme.Processes"/>
      <register type="IExcuteComponent" name="ClientExcutableComponentA" mapTo="Mneme.Processes.ClientExcutableComponentA, Mneme.Processes"/>
      <register type="IExcuteComponent" name="ClientExcutableComponentAA" mapTo="Mneme.Processes.ClientExcutableComponentAA, Mneme.Processes"/>
      <register type="IExcuteComponent" name="ClientExcutableComponentAA1" mapTo="Mneme.Processes.ClientExcutableComponentAA1, Mneme.Processes"/>
      <register type="IExcuteComponent" name="ClientExcutableComponentB" mapTo="Mneme.Processes.ClientExcutableComponentB, Mneme.Processes"/>
      <register type="IExcuteComponent" name="ClientExcutableComponentBB" mapTo="Mneme.Processes.ClientExcutableComponentBB, Mneme.Processes"/>
      <register type="IExcuteComponent" name="ClientExcutableComponentC" mapTo="Mneme.Processes.ClientExcutableComponentC, Mneme.Processes"/>
      <register type="IExcuteComponent" name="ClientExcutableComponentD" mapTo="Mneme.Processes.ClientExcutableComponentD, Mneme.Processes"/>
      <register type="IExcuteComponent" name="ClientExcutableComponentAB" mapTo="Mneme.Processes.ClientExcutableComponentAB, Mneme.Processes"/>
      <register type="IExcuteComponent" name="ClientExcutableComponentAABB" mapTo="Mneme.Processes.ClientExcutableComponentAABB, Mneme.Processes"/>
      <register type="IExcuteComponent" name="ClientExcutableComponentBBC" mapTo="Mneme.Processes.ClientExcutableComponentBBC, Mneme.Processes"/>

      <register type="IExcuteComponent" name="TreeTopExecutable" mapTo="Mneme.Processes.TreeTopExecutable, Mneme.Processes"/>
      <register type="IExcuteComponent" name="HelloWorldProcess" mapTo="Mneme.Processes.HelloWorldProcess, Mneme.Processes"/>

      <register type="IExecuteBatchComponent" name="ClientBatchExecutable" mapTo="Mneme.Processes.ClientBatchExecutable, Mneme.Processes"/>
      <register type="IExecuteGroupComponent" name="ClientGroupExecutable" mapTo="Mneme.Processes.ClientGroupExecutable, Mneme.Processes"/>
      <register type="IInitializeBatch" name="BatchInitializer" mapTo="Mneme.Processes.BatchInitializer, Mneme.Processes"/>

    </container>
  </unity>
  <log4net>
    <!--
  This writes the log information to the console window.  It only logs events
  that are at least at the INFO level (which would mean that DEBUG events are not
  captured.
  -->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date{ABSOLUTE} [%thread] %level %logger - %message%newlineExtra Info: %property{testProperty}%newline%exception"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="INFO"/>
        <levelMax value="FATAL"/>
      </filter>
    </appender>
    <!--
  This stores information in the mylogfile.txt file.  It only captures log events
  that contain the key word test or error.
  -->
    <appender name="myapender" type="log4net.Appender.RollingFileAppender">
      <file value="mylogfile.txt"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="5"/>
      <maximumFileSize value="10MB"/>
      <staticLogFileName value="true"/>
      <filter type="log4net.Filter.StringMatchFilter">
        <stringToMatch value="test"/>
      </filter>
      <filter type="log4net.Filter.StringMatchFilter">
        <stringToMatch value="TestLogerClass"/>
      </filter>
      <filter type="log4net.Filter.StringMatchFilter">
        <stringToMatch value="error"/>
      </filter>

      <filter type="log4net.Filter.DenyAllFilter"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %level %logger - %message%newline%exception"/>
      </layout>
    </appender>
    <root>
      <level value="FATAL"/>
      <level value="DEBUG"/>
      <level value="ERROR"/>
      <level value="INFO"/>
      <level value="WARN"/>
      <appender-ref ref="myapender"/>
    </root>
    <logger name="MnemeConsoleHost.TestLogerClass">
      <level value="FATAL"/>
      <appender-ref ref="myapender"/>
    </logger>
  </log4net>
  
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>


  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>
  <connectionStrings>
    <!--for jlin-pc local computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=ussjo-jlin-pc\SQLEXPRESS;initial catalog=MnemeRawData;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->
    <!--for cyclotron MnemeDBV1.0 computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.209.50.71;initial catalog=MnemeDBv1.0;persist security info=True;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->

    <!--for cyclotron MnemeJulieRawData computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.209.50.71;initial catalog=MnemeJulieRawData;persist security info=True;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->

    <!--for cyclotron MnemeMichaelv1 computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.209.50.71;initial catalog=MnemeMichaelv1;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->

    <!--for cyclotron MnemeMichaelv2 computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.209.50.71;initial catalog=MnemeMichaelv2;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->

    <!--for cyclotron MnemeMichaelv3 computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.209.50.71;initial catalog=MnemeMichaelv3;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->
    <!--for cyclotron MnemeMichaelv4 computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.209.50.71;initial catalog=MnemeMichaelv4;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->
    <!--for cyclotron MnemeMichaelv5 computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.209.50.71;initial catalog=MnemeMichaelv5;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->
    <!--for cyclotron MnemeMichaelv6 computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.209.50.71;initial catalog=MnemeMichaelv6;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->

    <!--for cyclotron MnemeMichaelv4 computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.209.50.71;initial catalog=MnemeMichaelv4;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->
    <!--for cyclotron MnemeMichaelv5 computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.209.50.71;initial catalog=MnemeMichaelv5;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->
    <!--for cyclotron MnemeMichaelv5 computer-->
    <!--<add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.209.50.71;initial catalog=MnemeMichaelv6;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->
    <!--for cyclotron MnemeMichaelv6 computer-->
    <add name="MnemeRawDataEntities" connectionString="metadata=res://*/MnemeRawData.csdl|res://*/MnemeRawData.ssdl|res://*/MnemeRawData.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=cyclotron;initial catalog=MnemeMichaelv6;user id=mneme;password=mneme;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>

  <system.serviceModel>
    <bindings>
      <netTcpBinding>
        <binding name="TcpBinding" maxReceivedMessageSize="102400000" openTimeout="00:00:05" closeTimeout="00:00:05" receiveTimeout="23:00:00" sendTimeout="00:00:30">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="163840000" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
        </binding>
      </netTcpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="acquisitionAndProcessBehaviorCfg">
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <workflowUnhandledException action="Terminate"/>
          <!--<sqlWorkflowInstanceStore
               connectionStringName="wfPersistence"
               instanceEncodingOption="None"
               instanceCompletionAction="DeleteAll"
               instanceLockedExceptionAction="BasicRetry"
               hostLockRenewalPeriod="00:00:05"
               runnableInstancesDetectionPeriod="00:00:10"/>-->
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <services>
      <service name="MnemeConsoleHost.ProcessEngineService">
        <endpoint
          address="net.tcp://localhost:9000/ProcessEngineService"
          binding="netTcpBinding"
          bindingConfiguration="TcpBinding"
          contract="Workflow.Data.Interfaces.IProcessingService" />
      </service>
      <service name="MnemeConsoleHost.RawDataManagerService">
        <endpoint
          address="net.tcp://localhost:9000/RawDataManagerService"
          binding="netTcpBinding"
          bindingConfiguration="TcpBinding"
          contract="Mneme.Data.Interfaces.IRawDataSummary" />
      </service>
    </services>

    <protocolMapping>
      <add scheme="http" binding="wsHttpContextBinding" />
    </protocolMapping>
    <diagnostics>
      <messageLogging maxMessagesToLog="100" logEntireMessage="true" logMessagesAtServiceLevel="true" logMalformedMessages="true" logMessagesAtTransportLevel="true">
      </messageLogging>
    </diagnostics>

    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.runtime.serialization>
    <dataContractSerializer>
      <declaredTypes>
        <add type="Workflow.Data.ProcessJob, Workflow.Data">
          <knownType type="Mneme.Data.MnemeSampleJob,  Mneme.Data"/>
        </add>
        <add type="Workflow.Data.ProcessBatch, Workflow.Data">
          <knownType type="Mneme.Data.MnemeBatch,  Mneme.Data"/>
        </add>
        <add type="Workflow.Data.ComponentNode, Workflow.Data">
          <knownType type="Mneme.Components.ClientComponentNode,  Mneme.Components"/>
          <knownType type="Mneme.Components.StartupComponentNode,  Mneme.Components"/>
          <knownType type="Mneme.Components.GroupComponentNode,  Mneme.Components"/>
          <knownType type="Mneme.Components.BatchComponentNode,  Mneme.Components"/>
          <knownType type="Mneme.Components.TreeTopNode,  Mneme.Components"/>
          <knownType type="Mneme.Components.IsotopicSearchNode,  Mneme.Components"/>
          <knownType type="Mneme.Components.MMDFFilterNode,  Mneme.Components"/>
          <knownType type="Mneme.Components.GroupNode,  Mneme.Components"/>
          <knownType type="Mneme.Components.BatchNode,  Mneme.Components"/>
          <knownType type="Mneme.Components.ReportNode,  Mneme.Components"/>
          <knownType type="Mneme.Components.PMFNode,  Mneme.Components"/>
          <knownType type="Mneme.Components.HelloWorldNode,  Mneme.Components"/>
        </add>

      </declaredTypes>
    </dataContractSerializer>
  </system.runtime.serialization>
</configuration>





